
/*구글 폰트 적용 */
@import url('https://fonts.googleapis.com/css2?family=Poppins&family=Varela+Round&display=swap');


/* header.css */
/* 기본 스타일 시트 초기화 start, 웹 브라우저 기본값 대신 개발자가 정의한 값으로 CSS 적용 */
*{
    margin:0;
    padding:0;
    box-sizing:border-box;
  }
  
  a, a:link, a:visited{
    color:inherit;
    text-decoration:none;
  }
  
  li{
    list-style:none;
  }
  /* 기본 스타일 시트 end */
  
  /* container. 전체프로젝트 기준너비(보통1140px)을 유지하기위한 wrapper 
  margin을 위아래 0, 왼오 auto로 지정하면 수평방향에서 중앙에 위치*/
  .container{
    width:1140px;
    margin:0 auto;
  }
  
  header{
    position:fixed; /* 프로젝트 완성본처럼 부드럽게 보이려면 자바스크립트가 필요.
    일단 13.3.3 absolute로 지정 -> fixed */
    color:white; /* 13.3.3 black -> white */
    top:0;
    z-index:1; /* position 속성 지정시 z-index는 기본값 0이 된다. 스크롤시 다른요소에 가려지지 않도록 1로설정*/
    width:100%;
    padding:1rem; /* html 태그 크기x1 */
  }
/* 헤더영역 메뉴 배치 관련 CSS 코드작성*/
  header .container{
    display: flex; /* 헤더 모든요소 한줄 배치 용이하게 flex로 */
    justify-content: space-between; /* header 영역 컨테이너 하위태그는 2개일때 왼쪽끝과 오른쪽 끝에 붙는식*/
    align-items: center;/* 수직정렬을 위해 지정 */
    width: 100%;
  }
/* 스페이스(하위) 선택자는 자식을 포함 손주 등 뒤 자손까지 영향 */
  header nav ul{
    display: flex; /* h1과 ul은 가로 한줄 적용 됨. 
    그러나 ul 안의 li는 아직 세로 한줄상태이므로 flex를 마찬가지로 적용 */
  }

  header nav ul li{
    padding: 10px;
  }
  header button{
    background: transparent;
    border:0;
    cursor: pointer; /* 버튼에 커서가 있을때 모양 설정*/
    /* 13.3.3 에서 추가*/
    color:white;  
  }
  header h1 button{
    font-size: 2rem;
    font-weight:bold;
  }
  header nav ul li button{
    font-size: 1.2rem;
    color: white;
  }

/* End header.css */

/* main.css */
  main{
    width:100%;
    height:100vh;
    color:white;
    background:linear-gradient(rgba(0,0,0,0.8), rgba(0,0,0,0.8)), url('images/me.jpg') center center;
    background-size:cover;
    display:flex; /* 수직방향에서 요소들이 중앙에 위치 */
    justify-content:flex-start;
    align-items:center;
    text-align:center;
  }

  /* 텍스트별로 크기와 margin 속성등을 지정*/

  /* main tag 안의 자식태그 h4에 대해 지정하며, 하위선택자(스페이스)를 지정한경우 하위 n째 동일 태그까지 스타일 상속됨*/
  main h4{
    /* 폰트사이즈를 html 폰트사이즈 16px 대비 2배로 지정*/
    font-size: 2rem; 
  }
  main h2{
    font-size: 3.5rem;
    margin: 2rem 0;
    /* 글자 사이의 간격은 letter-spacing으로, 단어 사이의 간격은 word-spacing으로 정함. 음수설정시 겹침 */
    letter-spacing: 3px;
    font-family: "Varela Round", sans-serif; /*구글 폰트 적용, 미지원시 산세리프체로 적용*/
  }
  main p{
    /* p태그 크기는 500px을 초과할수 없음 */
    max-width: 500px;
    margin: 0 auto;
    font-size: 2rem;
  }
  /* 버튼 꾸미기 */
  main button.download{
    background-color: transparent;  /*보통 버튼은 배경색을 투명하게 지정하고 시작하는 편이 좋다*/
    border: 3px solid white;
    border-radius: 20px;
    padding: 1rem 2rem; /*요소 내부간격 위오아왼 1 2 1 2*/
    margin-top: 3rem; /*외부간격 설정. 여기서는 p태그로부터 간격*/
    color: white;/*폰트컬러*/
    font-weight: bold;
    cursor: pointer;
  }
  main button.mouse{
    background-color: transparent;
    border: none;
    color: white;
    font-size: 2rem;
    /* 부모, 조상이 모두 static인 경우(position 미설정), document body를 기준으로 bottom, left위치 */
    position: absolute;
    bottom: 1rem; 
    left: 50%; 
    /*position 좌표설정은 왼쪽 꼭지점을 기준으로 하므로 x축 오른쪽으로 도형의 50%를 당겨 가운데로 맞춤*/
    transform: translateX(-50%); 
    /* 키프레임효과 지속시간 부드럽게(천천-보통-천천) 반복횟수 */
    animation: upDown 1s ease-in-out infinite;
    cursor: pointer;
  }
  @keyframes upDown {
    0%{
      bottom: 1rem;
    }
    50%{
      bottom: 1.5rem;
    }
    100%{
      bottom: 1rem;
    }
  }

  /* 메인화면의 글자가 지워졌다가 다시 채워지는 기능 */
  /* 1. after로 span끝에 커서만들기 */
  main h2 span::after{
    content:"";
    height: 40px;
    width: 3px;
    background-color: #fff;
    /* 컨텐츠의 사이즈에는 상관없이 지정한 box 사이즈를 따름. 
    공간이 있다면 하나의 라인에서 모두 표시됨. 
    span 태그는 inline 요소로 
    width나 height를 설정해 놓더라도 컨텐츠 사이즈에 맞추기 때문에 영향을 받지 않는다.
    따라서 span과 after를 한줄로 표시하되 사이즈가 적용되도록 inline-block 설정*/
    display: inline-block; 
    animation: blank .7s ease-in-out infinite;
  }
  @keyframes blank{
    0%{
      opacity: 1;
    }
    100%{
      opacity: 0;
    }
  }
/*End main.css */

/* about_me.css */
section{ /* 모든 섹션영역에 글꼴, 위아래 여백 지정 */
  font-family:'Poppins', sans-serif;
  padding:5rem 0;
}
section:nth-child(2n){ /* 가상클래스 선택자. 짝수번째 섹션영역 설정 */
  background-color:#f8f8f8;
}
section .title{
  margin-bottom:3rem;/* 타이틀 공통으로 아래 외부 공백 적용 */
}
section .title h4{
  font-size:1.35rem;
  color:#ed4848;
  position:relative; /*본래 본인 위치기준(static일 때의 위치)으로 자리잡음*/
}
section .title h2{
  font-size:3.5rem; 
}
section .title p{
  font-size:1.15rem;
}
/* about-self 이후 float 속성 해제. float속성은 원래 위치를 보장하지 않으므로 깨끗히 밀고 배치 시작*/
section .about-self::after{
  content:"";
  clear:both;
  display:block;
}
/* left 클래스 본문 너비 절반 지정 & 왼쪽 배치 */
section .about-self .left{
  width:50%;
  float:left;
}
/* 이미지 크기가 부모 영역(.left)을 넘지 않도록 부모 영역의 최대 크기로 지정 */
section .about-self .left img{
  max-width:100%;
}
/* 본문 너비 절반 지정 & 오른쪽 배치 */
section .about-self .right{
  width:50%;
  float:left;
  padding:0 2rem;
}
/* 본문 오른쪽 h3 태그의 글자 크기와 여백 지정 */
section .about-self .right h3{
  font-size:2.25rem;
  margin-bottom:1rem;
}
/* 본문 오른쪽 h3 태그의 strong 태그 색상 강조 */
section .about-self .right h3 strong{
  color:#ed4848;
}
/* 본문 오른쪽 p 태그의 크기와 여백 지정 */
section .about-self .right p{
  font-size:1.15rem;
  margin:1rem 0;
}
/* 본문 오른쪽의 아이콘 폰트 크기와 여백 지정 */
section .about-self .right .social a{
  font-size:2.5rem;
  margin-right:0.2rem;
}

/* End about_me.css */